@page "/items/list"
@inject HttpClient Http;
@using MenuShared.Dtos.Items

<h3>ItemList</h3>
@if (loading)
{
    <p>Yükleniyor..</p>
}
else if (Items == null || !Items.Any())
{
    <p>Kayıt bulunamadı.</p>
}
else
{
    <tr>
        <td>ID</td>
        <td>Name</td>
        <td>Categories</td>
        <td>Short Description</td>
        <td>Pictures</td>
        <td>Tags</td>
        <td>
            <button class="btn btn-primary" @onclick="()=> ShowCreateItem()">+ Add New</button>
        </td>
    </tr>
    foreach (var item in Items)
    {
        <tr>
            <td>@item.IdDto</td>
            <td>@item.Name</td>
            <td>@item.Categories</td>
            <td>@item.ShortDescription</td>
            <td>@item.Pictures</td>
            <td>@item.Tags</td>
            <td>
                <button class="btn btn-primary" @onclick="()=> ShowEditItem(item.IdDto)">Edit</button>
                <button class="btn btn-primary" @onclick="()=> ShowDeleteItem(item.IdDto)">Delete</button>
            </td>
        </tr>
    }
}

@code {
    [CascadingParameter] public IModalService Modal { get; set; }
    private ItemsDto[] Items;
    private bool loading = true;

    protected override async Task OnInitializedAsync()
    {
        Items = await Http.GetFromJsonAsync<ItemsDto[]>("items");
        loading = false;
    }
    void ShowEditItem(int itemId)
    {
        var parameters = new ModalParameters();
        parameters.Add(nameof(ItemEdit.ItemId), itemId);

        Modal.Show<ItemEdit>("Edit Item", parameters);
    }

    void ShowCreateItem()
    {
        Modal.Show<ItemCreate>("Create Item");
    }

    void ShowDeleteItem(int itemId)
    {
        var parameters = new ModalParameters();
        parameters.Add(nameof(ItemDelete.ItemId), itemId);

        Modal.Show<ItemEdit>("Edit Item", parameters);
    }
}
