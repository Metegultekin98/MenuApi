// <auto-generated />
using System;
using MenuApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MenuApi.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220417174328_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MenuApi.Entities.Categories.CategoryDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PictureModelId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PictureModelId");

                    b.ToTable("CategoryDtos");
                });

            modelBuilder.Entity("MenuApi.Entities.Items.ItemsDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("MediaGalleryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MediaGalleryId");

                    b.ToTable("ItemsDtos");
                });

            modelBuilder.Entity("MenuApi.Entities.Items.ItemsTagDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItemsTagDtos");
                });

            modelBuilder.Entity("MenuApi.Entities.Media.MediaGalleryDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("BoxEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("DefaultAlt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GalleryStartIndex")
                        .HasColumnType("int");

                    b.Property<int>("ImageSize")
                        .HasColumnType("int");

                    b.Property<bool>("ImageZoomEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("ModelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ThumbSize")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MediaGalleryDtos");
                });

            modelBuilder.Entity("MenuApi.Entities.Media.PictureDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AlternateText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FullSizeImageHeight")
                        .HasColumnType("int");

                    b.Property<string>("FullSizeImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FullSizeImageWidth")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PictureId")
                        .HasColumnType("int");

                    b.Property<int?>("Size")
                        .HasColumnType("int");

                    b.Property<string>("ThumbImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PictureDtos");
                });

            modelBuilder.Entity("MenuApi.Entities.Categories.CategoryDto", b =>
                {
                    b.HasOne("MenuApi.Entities.Media.PictureDto", "PictureModel")
                        .WithMany()
                        .HasForeignKey("PictureModelId");

                    b.Navigation("PictureModel");
                });

            modelBuilder.Entity("MenuApi.Entities.Items.ItemsDto", b =>
                {
                    b.HasOne("MenuApi.Entities.Media.MediaGalleryDto", "MediaGallery")
                        .WithMany()
                        .HasForeignKey("MediaGalleryId");

                    b.Navigation("MediaGallery");
                });
#pragma warning restore 612, 618
        }
    }
}
